use crate::{
    common::*,
    fundargs,
    time::{TT,DJC,DJ00}
};

const NFARG : usize = 8;

const N : usize = 5;

const NSP : usize = 6;
const NS0 : usize = 33;
const NS1 : usize = 3;
const NS2 : usize = 25;
const NS3 : usize = 4;
const NS4 : usize = 1;

const SP : [R;6] = [
    94e-6,
    3808.35e-6,
    -119.94e-6,
    -72574.09e-6,
    27.70e-6,
    15.61e-6
];


const KS0 : [[i8;8];NS0] = [
    [  0,  0,  0,  0,  1,  0,  0,  0],
    [  0,  0,  0,  0,  2,  0,  0,  0],
    [  0,  0,  2, -2,  3,  0,  0,  0],
    [  0,  0,  2, -2,  1,  0,  0,  0],
    [  0,  0,  2, -2,  2,  0,  0,  0],
    [  0,  0,  2,  0,  3,  0,  0,  0],
    [  0,  0,  2,  0,  1,  0,  0,  0],
    [  0,  0,  0,  0,  3,  0,  0,  0],
    [  0,  1,  0,  0,  1,  0,  0,  0],
    [  0,  1,  0,  0, -1,  0,  0,  0],
    [  1,  0,  0,  0, -1,  0,  0,  0],
    [  1,  0,  0,  0,  1,  0,  0,  0],
    [  0,  1,  2, -2,  3,  0,  0,  0],
    [  0,  1,  2, -2,  1,  0,  0,  0],
    [  0,  0,  4, -4,  4,  0,  0,  0],
    [  0,  0,  1, -1,  1, -8, 12,  0],
    [  0,  0,  2,  0,  0,  0,  0,  0],
    [  0,  0,  2,  0,  2,  0,  0,  0],
    [  1,  0,  2,  0,  3,  0,  0,  0],
    [  1,  0,  2,  0,  1,  0,  0,  0],
    [  0,  0,  2, -2,  0,  0,  0,  0],
    [  0,  1, -2,  2, -3,  0,  0,  0],
    [  0,  1, -2,  2, -1,  0,  0,  0],
    [  0,  0,  0,  0,  0,  8,-13, -1],
    [  0,  0,  0,  2,  0,  0,  0,  0],
    [  2,  0, -2,  0, -1,  0,  0,  0],
    [  0,  1,  2, -2,  2,  0,  0,  0],
    [  1,  0,  0, -2,  1,  0,  0,  0],
    [  1,  0,  0, -2, -1,  0,  0,  0],
    [  0,  0,  4, -2,  4,  0,  0,  0],
    [  0,  0,  2, -2,  4,  0,  0,  0],
    [  1,  0, -2,  0, -3,  0,  0,  0],
    [  1,  0, -2,  0, -1,  0,  0,  0],
];

const KS1 : [[i8;8];NS1] = [
    [  0,  0,  0,  0,  2,  0,  0,  0],
    [  0,  0,  0,  0,  1,  0,  0,  0],
    [  0,  0,  2, -2,  3,  0,  0,  0]
];

const KS2 : [[i8;8];NS2] = [
    [  0,  0,  0,  0,  1,  0,  0,  0],
    [  0,  0,  2, -2,  2,  0,  0,  0],
    [  0,  0,  2,  0,  2,  0,  0,  0],
    [  0,  0,  0,  0,  2,  0,  0,  0],
    [  0,  1,  0,  0,  0,  0,  0,  0],
    [  1,  0,  0,  0,  0,  0,  0,  0],
    [  0,  1,  2, -2,  2,  0,  0,  0],
    [  0,  0,  2,  0,  1,  0,  0,  0],
    [  1,  0,  2,  0,  2,  0,  0,  0],
    [  0,  1, -2,  2, -2,  0,  0,  0],
    [  1,  0,  0, -2,  0,  0,  0,  0],
    [  0,  0,  2, -2,  1,  0,  0,  0],
    [  1,  0, -2,  0, -2,  0,  0,  0],
    [  0,  0,  0,  2,  0,  0,  0,  0],
    [  1,  0,  0,  0,  1,  0,  0,  0],
    [  1,  0, -2, -2, -2,  0,  0,  0],
    [  1,  0,  0,  0, -1,  0,  0,  0],
    [  1,  0,  2,  0,  1,  0,  0,  0],
    [  2,  0,  0, -2,  0,  0,  0,  0],
    [  2,  0, -2,  0, -1,  0,  0,  0],
    [  0,  0,  2,  2,  2,  0,  0,  0],
    [  2,  0,  2,  0,  2,  0,  0,  0],
    [  2,  0,  0,  0,  0,  0,  0,  0],
    [  1,  0,  2, -2,  2,  0,  0,  0],
    [  0,  0,  2,  0,  0,  0,  0,  0]
];

const KS3 : [[i8;8];NS3] = [
    [  0,  0,  0,  0,  1,  0,  0,  0],
    [  0,  0,  2, -2,  2,  0,  0,  0],
    [  0,  0,  2,  0,  2,  0,  0,  0],
    [  0,  0,  0,  0,  2,  0,  0,  0]
];

const KS4 : [[i8;8];NS4] = [
    [  0,  0,  0,  0,  1,  0,  0,  0]
];

const SS0 : [[R;2];NS0] = [
    [            -2640.73e-6,           0.39e-6],
    [              -63.53e-6,           0.02e-6],
    [              -11.75e-6,          -0.01e-6],
    [              -11.21e-6,          -0.01e-6],
    [                4.57e-6,           0.00e-6],
    [               -2.02e-6,           0.00e-6],
    [               -1.98e-6,           0.00e-6],
    [                1.72e-6,           0.00e-6],
    [                1.41e-6,           0.01e-6],
    [                1.26e-6,           0.01e-6],
    [                0.63e-6,           0.00e-6],
    [                0.63e-6,           0.00e-6],
    [               -0.46e-6,           0.00e-6],
    [               -0.45e-6,           0.00e-6],
    [               -0.36e-6,           0.00e-6],
    [                0.24e-6,           0.12e-6],
    [               -0.32e-6,           0.00e-6],
    [               -0.28e-6,           0.00e-6],
    [               -0.27e-6,           0.00e-6],
    [               -0.26e-6,           0.00e-6],
    [                0.21e-6,           0.00e-6],
    [               -0.19e-6,           0.00e-6],
    [               -0.18e-6,           0.00e-6],
    [                0.10e-6,          -0.05e-6],
    [               -0.15e-6,           0.00e-6],
    [                0.14e-6,           0.00e-6],
    [                0.14e-6,           0.00e-6],
    [               -0.14e-6,           0.00e-6],
    [               -0.14e-6,           0.00e-6],
    [               -0.13e-6,           0.00e-6],
    [                0.11e-6,           0.00e-6],
    [               -0.11e-6,           0.00e-6],
    [               -0.11e-6,           0.00e-6],
];

const SS1 : [[R;2];NS1] = [
    [               -0.07e-6,           3.57e-6],
    [                1.71e-6,          -0.03e-6],
    [                0.00e-6,           0.48e-6]
];

const SS2 : [[R;2];NS2] = [
    [              743.53e-6,          -0.17e-6],
    [               56.91e-6,           0.06e-6],
    [                9.84e-6,          -0.01e-6],
    [               -8.85e-6,           0.01e-6],
    [               -6.38e-6,          -0.05e-6],
    [               -3.07e-6,           0.00e-6],
    [                2.23e-6,           0.00e-6],
    [                1.67e-6,           0.00e-6],
    [                1.30e-6,           0.00e-6],
    [                0.93e-6,           0.00e-6],
    [                0.68e-6,           0.00e-6],
    [               -0.55e-6,           0.00e-6],
    [                0.53e-6,           0.00e-6],
    [               -0.27e-6,           0.00e-6],
    [               -0.27e-6,           0.00e-6],
    [               -0.26e-6,           0.00e-6],
    [               -0.25e-6,           0.00e-6],
    [                0.22e-6,           0.00e-6],
    [               -0.21e-6,           0.00e-6],
    [                0.20e-6,           0.00e-6],
    [                0.17e-6,           0.00e-6],
    [                0.13e-6,           0.00e-6],
    [               -0.13e-6,           0.00e-6],
    [               -0.12e-6,           0.00e-6],
    [               -0.11e-6,           0.00e-6]
];

const SS3 : [[R;2];NS3] = [
    [                0.30e-6,         -23.51e-6],
    [               -0.03e-6,          -1.39e-6],
    [               -0.01e-6,          -0.24e-6],
    [                0.00e-6,           0.22e-6]
];

const SS4 : [[R;2];NS4] = [
    [               -0.26e-6,          -0.01e-6]
];

const KSS : [&[[i8;8]];N] = [
    &KS0,
    &KS1,
    &KS2,
    &KS3,
    &KS4,
];

const SSS : [&[[R;2]];N] = [
    &SS0,
    &SS1,
    &SS2,
    &SS3,
    &SS4,
];
    
/// Source: s00.for
pub fn cio(TT((date1,date2)):TT,x:R,y:R)->R {
    let t = ((date1 - DJ00) + date2) / DJC;

    let fa = [
	fundargs::l03(t),
	fundargs::lp03(t),
	fundargs::f03(t),
	fundargs::d03(t),
	fundargs::om03(t),
	fundargs::ve03(t),
	fundargs::e03(t),
	fundargs::pa03(t)
    ];

    let mut s = SP;

    for k in 0..N {
	let ksk = &KSS[k];
	let ssk = &SSS[k];
	let nsk = ksk.len();
	for i in (0..nsk).rev() {
	    let mut a = 0.0;
	    for j in 0..NFARG {
		a += ksk[i][j] as f64*fa[j];
	    }
	    s[k] += ssk[i][0]*sin(a) + ssk[i][1]*cos(a);
	}
    }

    ( s[0] + ( s[1] + ( s[2] + ( s[3] + ( s[4] + s[5] * t ) * t ) * t ) * t ) * t ) * AS2R - x*y/2.0
}
